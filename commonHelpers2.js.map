{"version":3,"file":"commonHelpers2.js","sources":["../src/js/api/api-properties.js","../src/js/daily-quote.js","../src/js/api-service/categories-api.js","../src/js/elements.js","../src/js/filters-state-storage.js","../src/js/render-groups-list.js","../src/js/get-group-list-pagination.js","../src/js/get-group-list.js","../src/js/set-exercises-list-visibility.js","../src/js/categories.js","../src/js/api-service/exercices-api.js","../src/js/exercises.js","../src/img/icons.svg","../src/js/render-exercises-list.js","../src/js/constants.js","../src/js/get-exercises-list.js","../src/js/init-filters.js","../src/js/group-list-listener.js"],"sourcesContent":["export const API_PROPERTIES = Object.freeze({\n  BASE_URL: 'https://your-energy.b.goit.study/api',\n  EXERCISES: '/exercises',\n  RATING: '/rating',\n  FILTERS: '/filters',\n  QUOTE: '/quote',\n  SUBSCRIPTION: '/subscription',\n});\n","import axios from 'axios';\nimport { API_PROPERTIES } from './api/api-properties';\n\nconst quoteOfTheDay = document.querySelector('.daily-quote');\n\nconst { BASE_URL, QUOTE } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst getQuote = async () => {\n  try {\n    const quoteText = await axios.get(QUOTE);\n    displayQuoteText(quoteText.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst displayQuoteText = ({ author, quote }) => {\n  quoteOfTheDay.innerHTML = `<p class=\"daily-quote-text\">${quote}</p>\n    <h4 class=\"daily-quote-author\">${author}</h4>`;\n};\n\ngetQuote();\n\nexport { getQuote };\n","import axios from 'axios';\nimport { API_PROPERTIES } from '../api/api-properties';\n\nconst { BASE_URL, FILTERS } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst getCategories = async (category = 'Muscles', page = 1, limit = 12) => {\n  //need to implement less limit in case of smaller screens\n\n  const params = new URLSearchParams({ filter: category, limit, page });\n\n  const response = await axios.get(`${FILTERS}?${params}`);\n  return response.data;\n};\n\nexport { getCategories };\n","export const elements = {\n  body: document.querySelector('body'),\n  groupListWrapper: document.querySelector('.group-list-wrapper'),\n  groupList: document.getElementById('js-group-list'),\n  groupListPagination: document.getElementById('js-group-list-pagination'),\n  exercisesNavList: document.querySelectorAll('.exercises__nav-item'),\n  exercisesWrapper: document.querySelector('.exercises-list-wrapper'),\n};\n","const SELECTED_CATEGORY = 'selected-category';\nconst SELECTED_GROUP = 'selected-group';\nconst IS_EXERCISES_LIST_VISIBLE = 'is-exercises-list-visible';\nconst GROUP_PAGE = 'group-page';\nconst EXERCISES_PAGE = 'exercises-page';\nconst EXERCISES_KEYWORD = 'exercises-keyword';\n\nconst defaultCategory = 'Muscles';\n\nclass FiltersStateStorage {\n  setExercisesListVisible() {\n    sessionStorage.setItem(IS_EXERCISES_LIST_VISIBLE, 'true');\n  }\n\n  setExercisesListHidden() {\n    sessionStorage.setItem(IS_EXERCISES_LIST_VISIBLE, 'false');\n  }\n\n  isExercisesListVisible() {\n    return sessionStorage.getItem(IS_EXERCISES_LIST_VISIBLE) === 'true';\n  }\n\n  setFilterCategory(categoryName) {\n    sessionStorage.setItem(SELECTED_CATEGORY, categoryName);\n  }\n\n  getFilterCategory() {\n    return sessionStorage.getItem(SELECTED_CATEGORY) ?? defaultCategory;\n  }\n\n  setGroup(groupName) {\n    sessionStorage.setItem(SELECTED_GROUP, groupName);\n  }\n\n  getGroup() {\n    return sessionStorage.getItem(SELECTED_GROUP) ?? '';\n  }\n\n  setGroupPage(page) {\n    sessionStorage.setItem(GROUP_PAGE, page.toString());\n  }\n\n  getGroupPage() {\n    const value = sessionStorage.getItem(GROUP_PAGE);\n    return value ? Number(value) : 1;\n  }\n\n  getExercisesPage() {\n    const value = sessionStorage.getItem(EXERCISES_PAGE);\n    return value ? Number(value) : 1;\n  }\n\n  setExercisesPage(page) {\n    sessionStorage.setItem(EXERCISES_PAGE, page.toString());\n  }\n\n  setExercisesKeyword(keyword) {\n    sessionStorage.setItem(EXERCISES_KEYWORD, keyword);\n  }\n\n  getExercisesKeyword() {\n    return sessionStorage.getItem(EXERCISES_KEYWORD) ?? '';\n  }\n}\n\nconst filtersStorageInstance = new FiltersStateStorage();\n\nexport { filtersStorageInstance };\n","import anime from 'animejs';\nimport { elements } from './elements.js';\n\nfunction createGroupsMarkup(data) {\n  return data\n    .map(({ filter, name, imgURL }) => {\n      const dataFilterName = `data-filter=\"${filter}\"`;\n      const dataGroupName = `data-group=\"${name}\"`;\n      return `\n        <li class=\"group-list-card\" ${dataFilterName} ${dataGroupName}>\n          <img class=\"group-list-card-img\" src=\"${imgURL}\" alt=\"${filter} - ${name}\" ${dataFilterName} ${dataGroupName}></img>\n          <div class=\"group-list-card-info\" ${dataFilterName} ${dataGroupName}>\n          <h2 class=\"group-list-card-title\" ${dataFilterName} ${dataGroupName}>${name}</h2>\n          <p class=\"group-list-card-text\" ${dataFilterName} ${dataGroupName}>${filter}</p>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n}\n\nfunction addAnimation() {\n  const block = elements.groupList;\n  block.style.opacity = '0';\n\n  anime({\n    targets: block,\n    opacity: [0, 1],\n    duration: 300,\n    easing: 'easeOutQuad',\n    complete: () => {\n      elements.groupListPagination.style.display = 'flex';\n    },\n  });\n}\n\nexport function renderGroupsList(container, groupsList) {\n  container.innerHTML = '';\n  addAnimation();\n  container.insertAdjacentHTML('beforeend', createGroupsMarkup(groupsList));\n\n  hideExerciseName();\n\n  const groupCards = container.querySelectorAll('.group-list-card');\n  groupCards.forEach(card => {\n    card.addEventListener('click', () => {\n      const name = card.getAttribute('data-group');\n      updateExerciseName(name);\n    });\n  });\n}\n\nfunction updateExerciseName(name) {\n  const exerciseNameElement = document.querySelector('.exercises_name');\n  exerciseNameElement.textContent = `/ ${name}`;\n  exerciseNameElement.style.display = 'block';\n  exerciseNameElement.style.textTransform = 'capitalize';\n}\n\nfunction hideExerciseName() {\n  const exerciseNameElement = document.querySelector('.exercises_name');\n  exerciseNameElement.style.display = 'none';\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\n\nexport function groupListPagination({\n  currentPage,\n  perPage,\n  totalItems,\n  totalPages,\n  onChange,\n}) {\n  const container = 'js-group-list-pagination';\n  const paginationContainer = elements.groupListPagination;\n\n  if (totalPages > 1 && !filtersStorageInstance.isExercisesListVisible()) {\n    paginationContainer.classList.remove('is-hidden');\n  } else {\n    paginationContainer.classList.add('is-hidden');\n  }\n\n  const options = {\n    page: Number(currentPage),\n    itemsPerPage: perPage,\n    totalItems: totalItems,\n    centerAlign: true,\n    template: {\n      page: '<button href=\"#\">{{page}}</button>',\n      currentPage: '<button href=\"#\" class=\"is-active\">{{page}}</button>',\n      moveButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n      disabledMoveButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n      moreButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n    },\n  };\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('beforeMove', event => {\n    const newPage = event.page;\n    onChange(newPage);\n  });\n}\n","import { elements } from './elements.js';\nimport { filtersStorageInstance } from './filters-state-storage.js';\nimport { renderGroupsList } from './render-groups-list.js';\nimport { groupListPagination } from './get-group-list-pagination.js';\nimport { getCategories } from './api-service/categories-api';\n\nasync function getGroupListForNewPage(page) {\n  const filter = filtersStorageInstance.getFilterCategory();\n  const responseData = await getCategories(filter, page);\n  const { results } = responseData;\n  const container = elements.groupList;\n  renderGroupsList(container, results);\n}\n\nexport async function getGroupList({ page, filter }) {\n  const responseData = await getCategories(filter, page);\n  const { results, page: currentPage, perPage, totalPages } = responseData;\n\n  const totalItems = totalPages * perPage;\n  groupListPagination({\n    currentPage,\n    perPage,\n    totalItems,\n    totalPages,\n    onChange: newPage => {\n      filtersStorageInstance.setGroupPage(newPage);\n      getGroupListForNewPage(newPage);\n    },\n  });\n\n  const container = elements.groupList;\n  renderGroupsList(container, results);\n}\n","import { filtersStorageInstance } from './filters-state-storage';\nimport { elements } from './elements';\n\nexport function setExercisesListVisible() {\n  filtersStorageInstance.setExercisesListVisible();\n  elements.groupListWrapper.classList.add('is-hidden');\n  elements.exercisesWrapper.classList.remove('is-hidden');\n  // show search form\n}\n\nexport function setExercisesListHidden() {\n  filtersStorageInstance.setExercisesListHidden();\n  elements.groupListWrapper.classList.remove('is-hidden');\n  elements.exercisesWrapper.classList.add('is-hidden');\n  // hide seatch form\n}\n","import { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\nimport { getGroupList } from './get-group-list';\nimport { setExercisesListHidden } from './set-exercises-list-visibility';\n\nconst exerciseCategoryList = document.querySelector('.exercises_nav');\n\nconst onCategoryClick = async event => {\n  try {\n    let target = event.target;\n    let curentCategory = document.querySelector('.exercises__nav-item-current');\n\n    const toogleClass = (curentCategory, target) => {\n      curentCategory.classList.remove('exercises__nav-item-current');\n      target.classList.add('exercises__nav-item-current');\n    };\n\n    toogleClass(curentCategory, target);\n\n    const newFilter = event.target.textContent.trim();\n    elements.groupList.innerHTML = '';\n    setExercisesListHidden();\n\n    filtersStorageInstance.setFilterCategory(newFilter);\n    filtersStorageInstance.setGroupPage(1);\n    filtersStorageInstance.setExercisesPage(1);\n    filtersStorageInstance.setExercisesKeyword('');\n    elements.groupListPagination.style.display = 'none';\n\n    getGroupList({ page: 1, filter: newFilter });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexerciseCategoryList.addEventListener('click', onCategoryClick);\n\nexport { onCategoryClick };\n","import { API_PROPERTIES } from '../api/api-properties';\nimport axios from 'axios';\n\nconst { BASE_URL, EXERCISES } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst getExercises = async (category, bodyPart, page = 1, limit = 10) => {\n  const params = new URLSearchParams({\n    [category]: bodyPart,\n    limit,\n    page,\n  });\n\n  const response = await axios.get(`${EXERCISES}?${params}`);\n  return response.data;\n};\n\nconst getExerciseById = async id => {\n  const response = await axios.get(`${EXERCISES}/${id}`);\n  return response.data;\n};\n\nconst updateExerciseRating = async (id, rating) => {\n  const response = axios.patch(`${EXERCISES}/${id}/${rating}`);\n};\n\nexport { getExercises, getExerciseById, updateExerciseRating };\n","import { getExercises } from './api-service/exercices-api';\n\nconst exerciseSearchBtn = document.querySelector('.exercises_search-img');\nconst clearButton = document.querySelector('.exercises_criss-cross-img');\nconst inputField = document.querySelector('.exercises_search-input');\n\nconst onSearchClick = async () => {\n  const response = await getExercises('abs', 'heel');\n  console.log(response.data);\n};\n\nexerciseSearchBtn.addEventListener('click', onSearchClick);\n\nclearButton.addEventListener('click', () => {\n  inputField.value = '';\n  clearButton.style.display = 'none';\n});\n\ninputField.addEventListener('input', () => {\n  if (inputField.value.length > 0) {\n    clearButton.style.display = 'block';\n  } else {\n    clearButton.style.display = 'none';\n  }\n});\n\nexport { onSearchClick };\n","export default \"__VITE_ASSET__5a88835a__\"","import icons from './../img/icons.svg';\n\nfunction capitalizeFirstLetter(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\nfunction createExercisesMarkup(data) {\n  return data\n    .map(\n      ({ _id, bodyPart, target, rating, burnedCalories, time, name }) =>\n        `<li id=\"${_id}\" class=\"exercise-card\">\n          <div class=\"exercise-card-header-holder\">\n            <span class=\"exercise-card-tag\">Workout</span>\n            <span class=\"exercise-card-rating\">\n              <span>${rating}</span>\n              <svg width=\"34\" height=\"32\">\n                <use href=\"./img/icons.svg#star\"></use>\n              </svg>\n            </span>\n            <button class=\"exercise-card-header-btn\" data-button-id=\"${_id}\">\n              Start\n              <svg class=\"exercise-card-header-btn-icon\" width=\"32\" height=\"32\">\n               <use href=\"${icons}#arrow\"></use>\n              </svg>\n              </svg>\n            </button>\n          </div>\n          <div class=\"exercise-card-content-holder\">\n            <div class=\"exercise-card-title-holder\">\n              <span class=\"exercise-card-title-icon\" >\n                <svg width=\"24\" height=\"24\">\n                  <use href=\"${icons}#running-stick-figure-boder\"></use>\n                </svg>\n              </span>\n              <div class=\"exercise-card-title-name\">${capitalizeFirstLetter(\n                name\n              )}</div>\n            </div>\n            <div class=\"exercise-card-info-holder\">\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Burned calories:</span>\n                <span class=\"exercise-card-info-text\">${burnedCalories} / ${time} min</span>\n              </div>\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Body part:</span>\n                <span class=\"exercise-card-info-text\">${capitalizeFirstLetter(\n                  bodyPart\n                )}</span>\n              </div>\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Target:</span>\n                <span class=\"exercise-card-info-text\">${capitalizeFirstLetter(\n                  target\n                )}</span>\n              </div>\n            </div>\n          </div>\n        </li>`\n    )\n    .join('');\n}\n\nexport function renderExercisesList(container, exercisesList) {\n  container.innerHTML = '';\n\n  if (!exercisesList || exercisesList.length === 0) {\n    container.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"error-card\">\n        There are no exercises matching your search. Please try another term.\n      </li>`\n    );\n    return;\n  }\n\n  container.insertAdjacentHTML(\n    'beforeend',\n    createExercisesMarkup(exercisesList)\n  );\n}\n","export const filterCategories = {\n  MUSCLES: 'muscles',\n  BODY_PARTS: 'bodyparts',\n  EQUIPMENT: 'equipment',\n};\n","import { filtersStorageInstance } from './filters-state-storage.js';\nimport { elements } from './elements.js';\nimport { renderExercisesList } from './render-exercises-list.js';\nimport { filterCategories } from './constants.js';\nimport { getExercises } from './api-service/exercices-api.js';\n\nexport async function getExercisesList() {\n  let filterCategory = filtersStorageInstance.getFilterCategory();\n  let group = filtersStorageInstance.getGroup();\n\n  filterCategory = filterCategory.toLowerCase().split(' ').join('');\n  if (filterCategory === filterCategories.BODY_PARTS) {\n    filterCategory = filterCategory.slice(0, -1);\n  }\n  group = group?.toLowerCase();\n\n  const currentPage = filtersStorageInstance.getExercisesPage();\n\n  // get currentKeyword\n  // const currentKeyword = filtersStorageInstance.getExercisesKeyword();\n  // pass currentKeyword\n  const responseData = await getExercises(filterCategory, group, currentPage);\n\n  // set search value = currentKeyword ?? '';\n  renderExercisesList(elements.exercisesWrapper, responseData.results);\n}\n","import { filtersStorageInstance } from './filters-state-storage.js';\nimport { elements } from './elements.js';\nimport { getGroupList } from './get-group-list.js';\nimport { getExercisesList } from './get-exercises-list.js';\nimport {\n  setExercisesListVisible,\n  setExercisesListHidden,\n} from './set-exercises-list-visibility.js';\n\nconst initPage = filtersStorageInstance.getGroupPage();\nconst initFilter = filtersStorageInstance.getFilterCategory();\n\nelements.groupListPagination.style.display = 'none';\ngetGroupList({ page: initPage, filter: initFilter });\n\nif (filtersStorageInstance.isExercisesListVisible()) {\n  getExercisesList();\n  setExercisesListVisible();\n} else {\n  setExercisesListHidden();\n}\n\nelements.exercisesNavList.forEach(elem => {\n  const textContent = elem.textContent.trim();\n  if (textContent === initFilter) {\n    elem.classList.add('exercises__nav-item-current');\n  }\n});\n","import { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\nimport { getExercisesList } from './get-exercises-list';\nimport { setExercisesListVisible } from './set-exercises-list-visibility';\n\nelements.groupList.addEventListener('click', e => {\n  let filter = e.target.dataset.filter;\n  let group = e.target.dataset.group;\n  group = group?.toLowerCase();\n  if (filter && group) {\n    filtersStorageInstance.setGroup(group);\n    filtersStorageInstance.setFilterCategory(filter);\n    getExercisesList();\n    setExercisesListVisible();\n  }\n});\n"],"names":["API_PROPERTIES","quoteOfTheDay","BASE_URL","QUOTE","axios","getQuote","quoteText","displayQuoteText","err","author","quote","FILTERS","getCategories","category","page","limit","params","elements","SELECTED_CATEGORY","SELECTED_GROUP","IS_EXERCISES_LIST_VISIBLE","GROUP_PAGE","EXERCISES_PAGE","EXERCISES_KEYWORD","defaultCategory","FiltersStateStorage","categoryName","groupName","value","keyword","filtersStorageInstance","createGroupsMarkup","data","filter","name","imgURL","dataFilterName","dataGroupName","addAnimation","block","anime","renderGroupsList","container","groupsList","hideExerciseName","card","updateExerciseName","exerciseNameElement","groupListPagination","currentPage","perPage","totalItems","totalPages","onChange","paginationContainer","options","Pagination","event","newPage","getGroupListForNewPage","responseData","results","getGroupList","setExercisesListVisible","setExercisesListHidden","exerciseCategoryList","onCategoryClick","target","curentCategory","newFilter","error","EXERCISES","getExercises","bodyPart","exerciseSearchBtn","clearButton","inputField","onSearchClick","response","icons","capitalizeFirstLetter","text","createExercisesMarkup","_id","rating","burnedCalories","time","renderExercisesList","exercisesList","filterCategories","getExercisesList","filterCategory","group","initPage","initFilter","elem","e"],"mappings":"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"}