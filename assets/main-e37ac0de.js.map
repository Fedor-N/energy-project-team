{"version":3,"file":"main-e37ac0de.js","sources":["../../src/js/api/api-properties.js","../../src/js/daily-quote.js","../../src/js/api-service/categories-api.js","../../src/js/elements.js","../../src/js/filters-state-storage.js","../../src/js/render-groups-list.js","../../src/js/get-group-list-pagination.js","../../src/js/get-group-list.js","../../src/js/set-exercises-list-visibility.js","../../src/js/categories.js","../../src/js/api-service/exercices-api.js","../../src/img/icons.svg","../../src/js/render-exercises-list.js","../../src/js/exercises.js","../../src/js/constants.js","../../src/js/get-exercises-list.js","../../src/js/init-filters.js","../../src/js/header.js","../../src/js/burger.js","../../src/js/group-list-listener.js","../../src/js/modal-exercises.js","../../src/js/api-service/subscription-api.js","../../src/js/footer.js"],"sourcesContent":["export const API_PROPERTIES = Object.freeze({\n  BASE_URL: 'https://your-energy.b.goit.study/api',\n  EXERCISES: '/exercises',\n  RATING: '/rating',\n  FILTERS: '/filters',\n  QUOTE: '/quote',\n  SUBSCRIPTION: '/subscription',\n});\n","import axios from 'axios';\nimport { API_PROPERTIES } from './api/api-properties';\n\nconst quoteOfTheDay = document.querySelector('.daily-quote');\n\nconst { BASE_URL, QUOTE } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\nconst today = new Date().toISOString().split('T')[0];\n\nconst getNewQuote = async () => {\n  const res = await axios.get(QUOTE);\n  return {\n    quote: res.data.quote,\n    author: res.data.author,\n    date: today,\n  };\n};\n\nconst displayQuoteText = ({ author, quote }) => {\n  quoteOfTheDay.innerHTML = `<p class=\"daily-quote-text\">${quote}</p>\n    <h4 class=\"daily-quote-author\">${author}</h4>`;\n};\n\nconst displayQuote = async () => {\n  const savedQuote = localStorage.getItem('quote');\n\n  if (savedQuote) {\n    const savedData = JSON.parse(savedQuote);\n    const savedDate = savedData.date;\n    if (savedDate === today) {\n      displayQuoteText(savedData);\n      return;\n    }\n  }\n\n  const newQuote = await getNewQuote();\n  localStorage.setItem('quote', JSON.stringify(newQuote));\n  displayQuoteText(newQuote);\n};\n\ndisplayQuote();\n\nexport { displayQuote };\n","import axios from 'axios';\nimport { API_PROPERTIES } from '../api/api-properties';\n\nconst { BASE_URL, FILTERS } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst getCategories = async (category, page = 1, limit = 12) => {\n  //need to implement less limit in case of smaller screens\n\n  const params = new URLSearchParams({ filter: category, limit, page });\n\n  const response = await axios.get(`${FILTERS}?${params}`);\n  return response.data;\n};\n\ndocument.querySelectorAll('.exercises__nav-item').forEach(item => {\n            item.addEventListener('click', async () => {\n                const category = item.getAttribute('data-category');\n                try {\n                    const data = await getCategories(category);\n                    console.log(data);\n                } catch (error) {\n                    console.error('Error fetching categories:', error);\n                }\n            });\n        });\n\nexport { getCategories };\n","export const elements = {\n  body: document.querySelector('body'),\n  groupListWrapper: document.querySelector('.group-list-wrapper'),\n  groupList: document.getElementById('js-group-list'),\n  groupListPagination: document.getElementById('js-group-list-pagination'),\n  exercisesNavList: document.querySelectorAll('.exercises__nav-item'),\n  exercisesWrapper: document.querySelector('.exercises-list-wrapper'),\n};\n","const SELECTED_CATEGORY = 'selected-category';\nconst SELECTED_GROUP = 'selected-group';\nconst IS_EXERCISES_LIST_VISIBLE = 'is-exercises-list-visible';\nconst GROUP_PAGE = 'group-page';\nconst EXERCISES_PAGE = 'exercises-page';\nconst EXERCISES_KEYWORD = 'exercises-keyword';\n\nconst defaultCategory = 'Muscles';\n\nclass FiltersStateStorage {\n  setExercisesListVisible() {\n    sessionStorage.setItem(IS_EXERCISES_LIST_VISIBLE, 'true');\n  }\n\n  setExercisesListHidden() {\n    sessionStorage.setItem(IS_EXERCISES_LIST_VISIBLE, 'false');\n  }\n\n  isExercisesListVisible() {\n    return sessionStorage.getItem(IS_EXERCISES_LIST_VISIBLE) === 'true';\n  }\n\n  setFilterCategory(categoryName) {\n    sessionStorage.setItem(SELECTED_CATEGORY, categoryName);\n  }\n\n  getFilterCategory() {\n    return sessionStorage.getItem(SELECTED_CATEGORY) ?? defaultCategory;\n  }\n\n  setGroup(groupName) {\n    sessionStorage.setItem(SELECTED_GROUP, groupName);\n  }\n\n  getGroup() {\n    return sessionStorage.getItem(SELECTED_GROUP) ?? '';\n  }\n\n  setGroupPage(page) {\n    sessionStorage.setItem(GROUP_PAGE, page.toString());\n  }\n\n  getGroupPage() {\n    const value = sessionStorage.getItem(GROUP_PAGE);\n    return value ? Number(value) : 1;\n  }\n\n  getExercisesPage() {\n    const value = sessionStorage.getItem(EXERCISES_PAGE);\n    return value ? Number(value) : 1;\n  }\n\n  setExercisesPage(page) {\n    sessionStorage.setItem(EXERCISES_PAGE, page.toString());\n  }\n\n  setExercisesKeyword(keyword) {\n    sessionStorage.setItem(EXERCISES_KEYWORD, keyword);\n  }\n\n  getExercisesKeyword() {\n    return sessionStorage.getItem(EXERCISES_KEYWORD) ?? '';\n  }\n}\n\nconst filtersStorageInstance = new FiltersStateStorage();\n\nexport { filtersStorageInstance };\n","import anime from 'animejs';\nimport { elements } from './elements.js';\n\nfunction createGroupsMarkup(data) {\n  return data\n    .map(({ filter, name, imgURL }) => {\n      const dataFilterName = `data-filter=\"${filter}\"`;\n      const dataGroupName = `data-group=\"${name}\"`;\n      return `\n        <li class=\"group-list-card\" ${dataFilterName} ${dataGroupName}>\n          <img class=\"group-list-card-img\" src=\"${imgURL}\" alt=\"${filter} - ${name}\" ${dataFilterName} ${dataGroupName}></img>\n          <div class=\"group-list-card-info\" ${dataFilterName} ${dataGroupName}>\n          <h2 class=\"group-list-card-title\" ${dataFilterName} ${dataGroupName}>${name}</h2>\n          <p class=\"group-list-card-text\" ${dataFilterName} ${dataGroupName}>${filter}</p>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n}\n\nfunction addAnimation() {\n  const block = elements.groupList;\n  block.style.opacity = '0';\n\n  anime({\n    targets: block,\n    opacity: [0, 1],\n    duration: 300,\n    easing: 'easeOutQuad',\n    complete: () => {\n      elements.groupListPagination.style.display = 'flex';\n    },\n  });\n}\n\nexport function renderGroupsList(container, groupsList) {\n  container.innerHTML = '';\n  addAnimation();\n  container.insertAdjacentHTML('beforeend', createGroupsMarkup(groupsList));\n\n  hideExerciseName();\n\n  const groupCards = container.querySelectorAll('.group-list-card');\n  groupCards.forEach(card => {\n    card.addEventListener('click', () => {\n      const name = card.getAttribute('data-group');\n      updateExerciseName(name);\n    });\n  });\n}\n\nfunction updateExerciseName(name) {\n  const exerciseNameElement = document.querySelector('.exercises_name');\n  exerciseNameElement.textContent = `/ ${name}`;\n  exerciseNameElement.style.display = 'block';\n  exerciseNameElement.style.textTransform = 'capitalize';\n}\n\nfunction hideExerciseName() {\n  const exerciseNameElement = document.querySelector('.exercises_name');\n  exerciseNameElement.style.display = 'none';\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\n\nexport function groupListPagination({\n  currentPage,\n  perPage,\n  totalItems,\n  totalPages,\n  onChange,\n}) {\n  const container = 'js-group-list-pagination';\n  const paginationContainer = elements.groupListPagination;\n\n  if (totalPages > 1 && !filtersStorageInstance.isExercisesListVisible()) {\n    paginationContainer.classList.remove('is-hidden');\n  } else {\n    paginationContainer.classList.add('is-hidden');\n  }\n\n  const options = {\n    page: Number(currentPage),\n    itemsPerPage: perPage,\n    totalItems: totalItems,\n    centerAlign: true,\n    template: {\n      page: '<button href=\"#\">{{page}}</button>',\n      currentPage: '<button href=\"#\" class=\"is-active\">{{page}}</button>',\n      moveButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n      disabledMoveButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n      moreButton: '<button href=\"#\" class=\"is-hidden\"></button>',\n    },\n  };\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('beforeMove', event => {\n    const newPage = event.page;\n    onChange(newPage);\n  });\n}\n","import { elements } from './elements.js';\nimport { filtersStorageInstance } from './filters-state-storage.js';\nimport { renderGroupsList } from './render-groups-list.js';\nimport { groupListPagination } from './get-group-list-pagination.js';\nimport { getCategories } from './api-service/categories-api';\n\nasync function getGroupListForNewPage(page) {\n  const filter = filtersStorageInstance.getFilterCategory();\n  const responseData = await getCategories(filter, page);\n  const { results } = responseData;\n  const container = elements.groupList;\n  renderGroupsList(container, results);\n}\n\nexport async function getGroupList({ page, filter }) {\n  const responseData = await getCategories(filter, page);\n  const { results, page: currentPage, perPage, totalPages } = responseData;\n\n  const totalItems = totalPages * perPage;\n  groupListPagination({\n    currentPage,\n    perPage,\n    totalItems,\n    totalPages,\n    onChange: newPage => {\n      filtersStorageInstance.setGroupPage(newPage);\n      getGroupListForNewPage(newPage);\n    },\n  });\n\n  const container = elements.groupList;\n  renderGroupsList(container, results);\n}\n","import { filtersStorageInstance } from './filters-state-storage';\nimport { elements } from './elements';\n\nexport function setExercisesListVisible() {\n  filtersStorageInstance.setExercisesListVisible();\n  elements.groupListWrapper.classList.add('is-hidden');\n  elements.exercisesWrapper.classList.remove('is-hidden');\n  // show search form\n}\n\nexport function setExercisesListHidden() {\n  filtersStorageInstance.setExercisesListHidden();\n  elements.groupListWrapper.classList.remove('is-hidden');\n  elements.exercisesWrapper.classList.add('is-hidden');\n  // hide seatch form\n}\n","import { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\nimport { getGroupList } from './get-group-list';\nimport { setExercisesListHidden } from './set-exercises-list-visibility';\n\nconst exerciseCategoryList = document.querySelector('.exercises_nav');\n\nconst onCategoryClick = async event => {\n  try {\n    let target = event.target;\n    let curentCategory = document.querySelector('.exercises__nav-item-current');\n\n    const toogleClass = (curentCategory, target) => {\n      curentCategory.classList.remove('exercises__nav-item-current');\n      target.classList.add('exercises__nav-item-current');\n    };\n\n    toogleClass(curentCategory, target);\n\n    const newFilter = event.target.textContent.trim();\n    elements.groupList.innerHTML = '';\n    setExercisesListHidden();\n\n    filtersStorageInstance.setFilterCategory(newFilter);\n    filtersStorageInstance.setGroupPage(1);\n    filtersStorageInstance.setExercisesPage(1);\n    filtersStorageInstance.setExercisesKeyword('');\n    elements.groupListPagination.style.display = 'none';\n\n    getGroupList({ page: 1, filter: newFilter });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexerciseCategoryList.addEventListener('click', onCategoryClick);\n\nexport { onCategoryClick };\n","import { API_PROPERTIES } from '../api/api-properties';\nimport axios from 'axios';\n\nconst { BASE_URL, EXERCISES } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst getExercises = async (category, bodyPart, page = 1, limit = 10) => {\n  const params = new URLSearchParams({\n    [category]: bodyPart,\n    limit,\n    page,\n  });\n\n  const response = await axios.get(`${EXERCISES}?${params}`);\n\n  const searchTerm = document.querySelector('.exercises_search-input').value.toLowerCase();\n  const filteredResults = response.data.results.filter(exercise => \n    exercise.name.toLowerCase().includes(searchTerm)\n  );\n\n  return { ...response.data, results: filteredResults };\n};\n\nconst getExerciseById = async id => {\n  const response = await axios.get(`${EXERCISES}/${id}`);\n  return response.data;\n};\n\nconst updateExerciseRating = async (id, rating) => {\n  const response = axios.patch(`${EXERCISES}/${id}/${rating}`);\n};\n\nexport { getExercises, getExerciseById, updateExerciseRating };","export default \"__VITE_ASSET__883ded96__\"","import icons from './../img/icons.svg';\n\nfunction capitalizeFirstLetter(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\nexport function createExercisesMarkup(data) {\n  return data\n    .map(\n      ({ _id, bodyPart, target, rating, burnedCalories, time, name }) =>\n        `<li id=\"${_id}\" class=\"exercise-card\">\n          <div class=\"exercise-card-header-holder\">\n            <span class=\"exercise-card-tag\">Workout</span>\n            <span class=\"exercise-card-rating\">\n              <span>${rating.toFixed(1)}</span>\n              <svg width=\"34\" height=\"32\">\n                <use href=\"${icons}#star\"></use>\n              </svg>\n            </span>\n            <button class=\"exercise-card-header-btn\" data-button-id=\"${_id}\">\n              Start\n              <svg class=\"exercise-card-header-btn-icon\" width=\"32\" height=\"32\">\n                <use href=\"${icons}#arrow\"></use>\n              </svg>\n              </svg>\n            </button>\n          </div>\n          <div class=\"exercise-card-content-holder\">\n            <div class=\"exercise-card-title-holder\">\n              <span class=\"exercise-card-title-icon\" >\n                <svg width=\"20\" height=\"20\">\n                  <use href=\"${icons}#running-stick-figure\"></use>\n                </svg>\n              </span>\n              <div class=\"exercise-card-title-name\">${capitalizeFirstLetter(\n                name\n              )}</div>\n            </div>\n            <div class=\"exercise-card-info-holder\">\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Burned calories:</span>\n                <span class=\"exercise-card-info-text\">${burnedCalories} / ${time} min</span>\n              </div>\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Body part:</span>\n                <span class=\"exercise-card-info-text\">${capitalizeFirstLetter(\n                  bodyPart\n                )}</span>\n              </div>\n              <div class=\"exercise-card-info\">\n                <span class=\"exercise-card-info-title\">Target:</span>\n                <span class=\"exercise-card-info-text\">${capitalizeFirstLetter(\n                  target\n                )}</span>\n              </div>\n            </div>\n          </div>\n        </li>`\n    )\n    .join('');\n}\n\nexport function renderExercisesList(container, exercisesList) {\n  container.innerHTML = '';\n\n  if (!exercisesList || exercisesList.length === 0) {\n    container.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"error-card\">\n        There are no exercises matching your search. Please try another term.\n      </li>`\n    );\n    return;\n  }\n\n  container.insertAdjacentHTML(\n    'beforeend',\n    createExercisesMarkup(exercisesList)\n  );\n}\n","import { getExercises } from './api-service/exercices-api';\nimport { renderExercisesList } from './render-exercises-list';\nimport { elements } from './elements';\n\nconst exerciseSearchBtn = document.querySelector('.exercises_search-img');\nconst clearButton = document.querySelector('.exercises_criss-cross-img');\nconst inputField = document.querySelector('.exercises_search-input');\n\nlet limit = window.innerWidth < 768 ? 8 : 10;\n\nconst onSearchClick = async () => {\n  const category = document.querySelector('.exercises_name').textContent;\n  const searchTerm = inputField.value;\n\n  const response = await getExercises(category, searchTerm, 1, limit);\n\n\n  if (response && response.results) {\n    renderExercisesList(elements.exercisesWrapper, response.results);\n  } else {\n    console.error('Invalid response structure:', response);\n  }\n};\n\nexerciseSearchBtn.addEventListener('click', onSearchClick);\n\nclearButton.addEventListener('click', () => {\n  inputField.value = '';\n  clearButton.style.display = 'none';\n  onSearchClick();\n});\n\ninputField.addEventListener('input', () => {\n  if (inputField.value.length > 0) {\n    clearButton.style.display = 'block';\n  } else {\n    clearButton.style.display = 'none';\n  }\n});\n\ninputField.addEventListener('keypress', (event) => {\n  if (event.key === 'Enter') {\n    onSearchClick();\n  }\n});\n\ndocument.querySelectorAll('.exercises__nav-item').forEach(item => {\n  item.addEventListener('click', () => {\n    document.querySelectorAll('.exercises__nav-item').forEach(el => {\n      el.classList.remove('active');\n    });\n    item.classList.add('active');\n    \n    const category = item.textContent.trim();\n    document.querySelector('.exercises_name').textContent = category;\n    \n    onSearchClick();\n  });\n});\n\nwindow.addEventListener('resize', () => {\n  const newLimit = window.innerWidth < 768 ? 8 : 10;\n  if (newLimit !== limit) {\n    limit = newLimit;\n    onSearchClick();\n  }\n});\n\nexport { onSearchClick };","export const filterCategories = {\n  MUSCLES: 'muscles',\n  BODY_PARTS: 'bodyparts',\n  EQUIPMENT: 'equipment',\n};\n","import { filtersStorageInstance } from './filters-state-storage.js';\nimport { elements } from './elements.js';\nimport { renderExercisesList } from './render-exercises-list.js';\nimport { filterCategories } from './constants.js';\nimport { getExercises } from './api-service/exercices-api.js';\n\nexport async function getExercisesList() {\n  let filterCategory = filtersStorageInstance.getFilterCategory();\n  let group = filtersStorageInstance.getGroup();\n\n  filterCategory = filterCategory.toLowerCase().split(' ').join('');\n  if (filterCategory === filterCategories.BODY_PARTS) {\n    filterCategory = filterCategory.slice(0, -1);\n  }\n  group = group?.toLowerCase();\n\n  const currentPage = filtersStorageInstance.getExercisesPage();\n\n  // get currentKeyword\n  // const currentKeyword = filtersStorageInstance.getExercisesKeyword();\n  // pass currentKeyword\n  const responseData = await getExercises(filterCategory, group, currentPage);\n\n  // set search value = currentKeyword ?? '';\n  renderExercisesList(elements.exercisesWrapper, responseData.results);\n}\n","import { filtersStorageInstance } from './filters-state-storage.js';\nimport { elements } from './elements.js';\nimport { getGroupList } from './get-group-list.js';\nimport { getExercisesList } from './get-exercises-list.js';\nimport {\n  setExercisesListVisible,\n  setExercisesListHidden,\n} from './set-exercises-list-visibility.js';\n\nconst initPage = filtersStorageInstance.getGroupPage();\nconst initFilter = filtersStorageInstance.getFilterCategory();\n\nelements.groupListPagination.style.display = 'none';\ngetGroupList({ page: initPage, filter: initFilter });\n\nif (filtersStorageInstance.isExercisesListVisible()) {\n  getExercisesList();\n  setExercisesListVisible();\n} else {\n  setExercisesListHidden();\n}\n\nelements.exercisesNavList.forEach(elem => {\n  const textContent = elem.textContent.trim();\n  if (textContent === initFilter) {\n    elem.classList.add('exercises__nav-item-current');\n  }\n});\n","document.addEventListener('DOMContentLoaded', () => {\n    const currentUrl = new URL(window.location.href);\n  \n    const homePage = document.querySelector('#home');\n    const favouritesPage = document.querySelector('#favorites');\n  \n    if (\n      currentUrl.href === homePage.href ||\n      currentUrl.pathname === '/' ||\n      currentUrl.pathname === '/energy-project-team.git/'\n    ) {\n      favouritesPage.classList.remove('current-page');\n      homePage.classList.add('current-page');\n    }\n  \n    if (currentUrl.href === favouritesPage.href) {\n      homePage.classList.remove('current-page');\n      favouritesPage.classList.add('current-page');\n    }\n  });","function burgerButton() {\n    const burger = document.querySelector('.burger');\n    const mobileMenu = document.querySelector('.nav-bar-mobile');\n    const body = document.querySelector('body');\n  \n    burger.addEventListener('click', function changeBurger() {\n      burger.classList.toggle('change');\n      mobileMenu.classList.toggle('is-hidden');\n      body.classList.toggle('overlow');\n    });\n  }\n  \n  burgerButton();","import { elements } from './elements';\nimport { filtersStorageInstance } from './filters-state-storage';\nimport { getExercisesList } from './get-exercises-list';\nimport { setExercisesListVisible } from './set-exercises-list-visibility';\n\nelements.groupList.addEventListener('click', e => {\n  let filter = e.target.dataset.filter;\n  let group = e.target.dataset.group;\n  group = group?.toLowerCase();\n  if (filter && group) {\n    filtersStorageInstance.setGroup(group);\n    filtersStorageInstance.setFilterCategory(filter);\n    getExercisesList();\n    setExercisesListVisible();\n  }\n});\n","import axios from 'axios';\nimport { getExerciseById } from './api-service/exercices-api';\nimport icons from '../img/icons.svg';\n\nlet isFavorite = false;\nlet idFavorite;\n\nconst modalExercises = document.querySelector('.modal-exercises');\nconst overlay = document.querySelector('.overlay');\nconst listItem = document.querySelector('.exercise-card-header-btn');\n\n// listItem.addEventListener('click', onExercisesCardClick);\n\nasync function onExercisesCardClick(event) {\n  if (!event.target.closest('.exercise-card')) {\n    return;\n  }\n\n  try {\n    const exerciseID = event.target\n      .closest('.exercise-card')\n      .getAttribute('data-id');\n\n    const exerciseData = await getExerciseById(event);\n    console.log(exerciseData);\n    console.log('Exercise Data:', exerciseData);\n\n    idFavorite = exerciseID;\n\n    const markup = createMarkup(exerciseData);\n    console.log('Generated Markup:', markup);\n    updateModal(markup);\n    openModalExercises();\n\n    const btnModalFavorites = document.querySelector(\n      '.modal-exercises-btn-favorites'\n    );\n    btnModalFavorites.addEventListener('click', toggleBtn);\n    const btnModalClose = document.querySelector('.modal-exercises-btn-close');\n    btnModalClose.addEventListener('click', closeModalExercises);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction openModalExercises() {\n  const lockPaddingValue = window.innerWidth - document.body.offsetWidth + 'px';\n\n  modalExercises.classList.remove('hidden');\n  overlay.classList.remove('hidden');\n  document.body.style.paddingRight = lockPaddingValue;\n  document.body.style.overflow = 'hidden';\n}\n\nfunction updateModal(markup) {\n  modalExercises.innerHTML = markup;\n\n  toggleFavorites();\n}\n\nfunction createRating(rating) {\n  const starColor = '#EEA10C';\n  const emptyStarColor = '#F4F4F4';\n  const totalStars = 5;\n\n  let stars = '';\n  for (let i = 0; i < totalStars; i++) {\n    const gradientId = `starGradient${i}`;\n    const fillPercentage =\n      i + 1 <= rating ? 100 : i < rating ? (rating % 1) * 100 : 0;\n\n    const gradientStops = [\n      { offset: '0%', color: starColor, opacity: '1' },\n      { offset: `${fillPercentage}%`, color: starColor, opacity: '1' },\n      {\n        offset: `${fillPercentage + 1}%`,\n        color: emptyStarColor,\n        opacity: '0.20',\n      },\n    ];\n\n    const linearGradient = `\n        <linearGradient id=\"${gradientId}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          ${gradientStops\n            .map(\n              stop =>\n                `<stop offset=\"${stop.offset}\" style=\"stop-color:${stop.color};stop-opacity:${stop.opacity}\" />`\n            )\n            .join('')}\n        </linearGradient>\n      `;\n\n    const fill = `url(#${gradientId})`;\n\n    stars += `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"13\" viewBox=\"0 0 14 13\" fill=\"none\">${linearGradient}<path d=\"M6.04894 0.927052C6.3483 0.0057416 7.6517 0.00574088 7.95106 0.927052L8.79611 3.52786C8.92999 3.93989 9.31394 4.21885 9.74717 4.21885H12.4818C13.4505 4.21885 13.8533 5.45846 13.0696 6.02786L10.8572 7.63525C10.5067 7.8899 10.3601 8.34127 10.494 8.75329L11.339 11.3541C11.6384 12.2754 10.5839 13.0415 9.80017 12.4721L7.58779 10.8647C7.2373 10.6101 6.7627 10.6101 6.41222 10.8647L4.19983 12.4721C3.41612 13.0415 2.36164 12.2754 2.66099 11.3541L3.50604 8.75329C3.63992 8.34127 3.49326 7.8899 3.14277 7.63525L0.930391 6.02787C0.146677 5.45846 0.549452 4.21885 1.51818 4.21885H4.25283C4.68606 4.21885 5.07001 3.93989 5.20389 3.52786L6.04894 0.927052Z\" fill=\"${fill}\" fill-opacity=\"1\"/></svg>`;\n  }\n\n  const ratingText = Number.isInteger(rating)\n    ? `${rating}.0`\n    : rating.toFixed(1);\n\n  const ratingWithStars = `${ratingText} ${stars}`;\n\n  return ratingWithStars;\n}\nfunction createMarkup({\n  _id,\n  bodyPart,\n  equipment,\n  gifUrl,\n  name,\n  target,\n  description,\n  rating,\n  burnedCalories,\n  time,\n  popularity,\n}) {\n  const getExerciseGif = getGif(gifUrl);\n  function getGif(gifUrl) {\n    if (gifUrl === null || !gifUrl) {\n      return `src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"`;\n    }\n    return `src=\"${gifUrl}\"`;\n  }\n\n  const ratingStarsHTML = createRating(rating);\n\n  return `\n  <div class=\"modal-exercises-container\" data-id=\"${_id}\">\n    <button class=\"modal-exercises-btn-close\">\n      <svg width=\"24\" height=\"24\">\n        <use href=\"${icons}#menu-mobile-close\"></use>\n      </svg>\n    </button>\n\n    <img\n    class=\"modal-exercises-img\"\n    ${getExerciseGif}\n    alt=\"Exercise image\"\n    loading=\"lazy\"\n    />\n\n    <div class=\"modal-exercises-card\">\n      <h2 class=\"modal-exercises-name\">${name}</h2>\n      <div class=\"modal-exercises-rating\">${ratingStarsHTML}</div>\n\n        <div class=\"modal-exercises-block\">\n          <ul class=\"modal-exercises-list\">\n            <li class=\"modal-exercises-item\">\n              <h3 class=\"modal-exercises-subtitle\">Target</h3>\n              <p class=\"modal-exercises-text\">${target}</p>\n            </li>\n\n            <li class=\"modal-exercises-item\">\n              <h3 class=\"modal-exercises-subtitle\">Body Part</h3>\n              <p class=\"modal-exercises-text\">${bodyPart}</p>\n            </li>\n\n            <li class=\"modal-exercises-item\">\n              <h3 class=\"modal-exercises-subtitle\">Equipment</h3>\n              <p class=\"modal-exercises-text\">${equipment}</p>\n            </li>\n\n            <li class=\"modal-exercises-item\">\n              <h3 class=\"modal-exercises-subtitle\">Popular</h3>\n              <p class=\"modal-exercises-text\">${popularity}</p>\n            </li>\n            \n            <li class=\"modal-exercises-item\">\n              <h3 class=\"modal-exercises-subtitle\">Burned Calories</h3>\n              <p class=\"modal-exercises-text\">${burnedCalories}/${time}</p>\n            </li>\n          </ul>\n          <p class=\"modal-exercises-description\">${description}</p>\n        </div>\n    </div>\n  </div>\n  <div class=\"modal-exercises-btn-container\">\n  <button class=\"modal-exercises-btn-favorites modal-exercises-btn\" type=\"button\" data-id=\"${_id}\">\n      Add to favorites\n      <svg class=\"btn-favorites-icon\">\n        <use href=\"${icons}#heart\"></use>\n      </svg>\n    </button>\n \n</div>\n`;\n}\n\nfunction closeModalExercises() {\n  modalExercises.classList.add('hidden');\n  overlay.classList.add('hidden');\n  document.body.style.paddingRight = '0px';\n  document.body.style.overflow = 'auto';\n}\n\noverlay.addEventListener('click', function (event) {\n  if (event.target === overlay) {\n    closeModalExercises();\n  }\n});\n\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape' && !modalExercises.classList.contains('hidden')) {\n    closeModalExercises();\n  }\n});\n\nfunction toggleFavorites() {\n  const local = JSON.parse(localStorage.getItem('exerciseData'));\n\n  const btnModalFavorites = document.querySelector(\n    '.modal-exercises-btn-favorites'\n  );\n\n  if (local?.some(item => item._id === idFavorite)) {\n    isFavorite = true;\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n  } else {\n    isFavorite = false;\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n  }\n}\n\nfunction toggleBtn() {\n  isFavorite = !isFavorite;\n  const btnModalFavorites = document.querySelector(\n    '.modal-exercises-btn-favorites'\n  );\n\n  const localFavorite = document.querySelector('.favorites-list');\n\n  if (isFavorite) {\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n    localFavorite == null\n      ? console.log('')\n      : setTimeout(() => {\n          createMarkupFavorite();\n        }, 100);\n  } else {\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n    localFavorite == null\n      ? console.log('')\n      : setTimeout(() => {\n          createMarkupFavorite();\n        }, 100);\n  }\n}\n\nfunction createAddToFavoritesMarkup() {\n  return `\n  Add to favorites\n    <svg class=\"btn-favorites-icon\">\n    <use href=\"${icons}#heart\"></use>\n    </svg>`;\n}\n\nfunction createRemoveFromFavoritesMarkup() {\n  return `\n  Remove from favorites\n  <svg class=\"btn-favorites-icon\">\n    <use href=\"${icons}#trash\"></use>\n  </svg>`;\n}\n","import { API_PROPERTIES } from '../api/api-properties';\nimport axios from 'axios';\n\nconst { BASE_URL, SUBSCRIPTION } = API_PROPERTIES;\naxios.defaults.baseURL = BASE_URL;\n\nconst postSubscription = async email => {\n  const response = await axios.post(`${SUBSCRIPTION}`, { email });\n  return response.data;\n};\n\nexport { postSubscription };\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { postSubscription } from './api-service/subscription-api';\n\nconst elements = {\n  form: document.querySelector('.subscribe__form'),\n  emailInput: document.querySelector('[name=\"email\"]'),\n};\n\nasync function test(event) {\n  event.preventDefault();\n\n  if (!elements.emailInput.value) return;\n  try {\n    const formData = elements.emailInput.value;\n    const res = await postSubscription(formData);\n    iziToast.success({\n      title: 'Success',\n      message: res.message,\n      position: 'topRight',\n    });\n    elements.form.reset();\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: error.response.data.message || error.message,\n      position: 'topRight',\n    });\n  }\n}\n\nelements.form.addEventListener('submit', test);\n"],"names":["API_PROPERTIES","quoteOfTheDay","BASE_URL","QUOTE","axios","today","getNewQuote","res","displayQuoteText","author","quote","displayQuote","savedQuote","savedData","newQuote","FILTERS","getCategories","category","page","limit","params","item","data","error","elements","SELECTED_CATEGORY","SELECTED_GROUP","IS_EXERCISES_LIST_VISIBLE","GROUP_PAGE","EXERCISES_PAGE","EXERCISES_KEYWORD","defaultCategory","FiltersStateStorage","categoryName","groupName","value","keyword","filtersStorageInstance","createGroupsMarkup","filter","name","imgURL","dataFilterName","dataGroupName","addAnimation","block","anime","renderGroupsList","container","groupsList","hideExerciseName","card","updateExerciseName","exerciseNameElement","groupListPagination","currentPage","perPage","totalItems","totalPages","onChange","paginationContainer","options","Pagination","event","newPage","getGroupListForNewPage","responseData","results","getGroupList","setExercisesListVisible","setExercisesListHidden","exerciseCategoryList","onCategoryClick","target","curentCategory","newFilter","EXERCISES","getExercises","bodyPart","response","searchTerm","filteredResults","exercise","icons","capitalizeFirstLetter","text","createExercisesMarkup","_id","rating","burnedCalories","time","renderExercisesList","exercisesList","exerciseSearchBtn","clearButton","inputField","onSearchClick","el","newLimit","filterCategories","getExercisesList","filterCategory","group","initPage","initFilter","elem","currentUrl","homePage","favouritesPage","burgerButton","burger","mobileMenu","body","modalExercises","overlay","closeModalExercises","SUBSCRIPTION","postSubscription","email","test","formData","iziToast"],"mappings":"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"}